spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
#    url: ENC(q2SDPaxej97qHhpPgyAObn71Dty7ceCSNGY9Hzj9uXtWXapEM7gUcjTKJmkRfh6S)
#    username: ENC(TvqDHtyojU+ktwRnpK/5Vw==)
#    password: ENC(V3Nxvb3V2AuagwrYW+wfkA==)
#    url: jdbc:mariadb://61.251.164.178:3306/seowon
#    username: seowon
#    password: seowon
    url: jdbc:mariadb://localhost:3306/sportal
    username: sportal
    password: sportal

  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: none   #create, update, validate, none, create-drop
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl   # 카멜이 언더바로 변경되는거 막기
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl   # 쿼리중 필드가 지정한대로 하도록(대소문자 구분하는 DB의 경우 완전 필요)
    defer-datasource-initialization: true	# sql 파일이 hibernate 초기화 이후 동작하게 하기 위한 옵션

    #  sql:
    #    init:
    #      platform: mariadb
    #      mode: always	# 초기 쿼리문 작성 always, never

    p6spy:
      enable-logging: true   # JDBC 이벤트 로깅을 위한 P6LogFactory 등록
      multiline: true   # com.p6spy.engine.spy.appender.MultiLineFormat 사용 (SingleLineFormat 대신)
      logging: slf4j   # 기본 리스너들을 위한 로깅 사용 [slf4j, sysout, file, custom]
      # 실제 값으로 '?'를 대체한 효과적인 SQL 문자열을 추적 시스템에 보고
      # 참고: 이 설정은 로깅 메시지에 영향을 주지 않음
      tracing:
        include-parameter-values: true
#      log-file: spy.log   # 파일 로깅 사용 시 로그 파일 지정: 로그 파일 사용 (logging=file일 때만)
#      custom-appender-class: my.custom.LoggerClass   # 커스텀 로거 클래스 지정: 사용할 클래스 파일 (logging=custom일 때만). 클래스는 com.p6spy.engine.spy.appender.FormattedLogger를 구현해야 함
#      log-format:   # 커스텀 로그 포맷 지정: 지정하면 com.p6spy.engine.spy.appender.CustomLineFormat이 이 로그 포맷으로 사용됨 
      # 로그 메시지 필터링을 위한 정규 표현식 패턴 사용: 지정되면 일치하는 메시지만 로깅됨
#      log-filter:
#        pattern:

  jwt:
#    secret: ENC(hJ0Cz5WwGJnVpetEu6sYu62TBFKlL7weWH6aBeNBw67J9r8A26PbZKjt0t4e3FR7XxnAPzEAsplO94X49yjLR2gxuOMWYIN+)   # 토큰 암호화 보안키
    secret: ThisIsSilsFrameworkAndThisFrameworkIsBorn20241114BySangsil   # 토큰 암호화 보안키
    access:
      expiration: 5	# access토큰 만료시간( )second)
    refresh:
      expiration: 86400	# access토큰 만료시간(second)

server:
  host:
    api: http://localhost:8080
    front: http://localhost:3000

# SWAGGER 설정
springdoc:
  packages-to-scan: com.seowoninfo.backend01
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion : none
    defaultModelsExpandDepth: -1
  api-docs:
    path: /api
    show-actuator: true
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  paths-to-match:
  show-login-endpoint: true	# 로그인은 security UsernamePasswordAuthenticationFilter라 실제url 이 없어서 swagger에 나타나도록 설정 
  
file:
  path: /home/backend01/upload
  
logging:
  level:
    root: info
    com.sw.sportal: debug
